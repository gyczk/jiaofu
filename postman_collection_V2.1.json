{
	"info": {
		"_postman_id": "4a9bcc99-e313-4882-bc3b-c8d727a29db2",
		"name": "jiaofu",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6099469"
	},
	"item": [
		{
			"name": "role",
			"item": [
				{
					"name": "分页",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageNumber\": \"1\",\r\n    \"pageSize\": \"20\",\r\n    \"orders\": [\r\n        {\r\n            \"field\": \"sort\",\r\n            \"direction\": \"ASC\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/roles/page",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"roles",
								"page"
							]
						}
					},
					"response": []
				},
				{
					"name": "添加",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test\",\r\n    \"code\": \"20\",\r\n    \"sort\": \"1\",\r\n    \"status\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/roles",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "修改",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"id\":\"09ed98bf241dd36bf44197f18a900d76\",\r\n    \"name\": \"test123\",\r\n    \"code\": \"200\",\r\n    \"sort\": \"11\",\r\n    \"status\": \"11\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/roles",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "删除",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/roles/d6b08021656033e65ee61d9320d9d828",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"roles",
								"d6b08021656033e65ee61d9320d9d828"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "me",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/users/me",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "分页",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJMT0dJTl9JTkZPIjoie1wiYWNjb3VudE5vbkV4cGlyZWRcIjp0cnVlLFwiYWNjb3VudE5vbkxvY2tlZFwiOnRydWUsXCJhdXRob3JpdGllc1wiOltdLFwiY3JlZGVudGlhbHNOb25FeHBpcmVkXCI6dHJ1ZSxcImVuYWJsZWRcIjp0cnVlLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwidXNlclwiOntcImNvaW5cIjowLjAsXCJjcmVhdGVUaW1lXCI6MTc0NzMyMzgxODAwMCxcImRvY19udW1cIjowLFwiZmFuc1wiOjAsXCJpZFwiOlwiMVwiLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwicGhvbmVcIjpcIjEyM1wiLFwidXBkYXRlVGltZVwiOjE3NDczMjM4MTgwMDAsXCJ1c2VyTmFtZVwiOlwiMTIzXCJ9LFwidXNlcm5hbWVcIjpcIjEyM1wifSIsImV4cCI6MTc0NzMzODM0MiwiaWF0IjoxNzQ3MzMxMTQyLCJqdGkiOiI0ZTJjMDhkNTkwNzU0NmM4ODQxZTE0OGU4ZDBiZGE4NSJ9.FDWARis3jlHdr0pLQ0wQH9yuK01a7h-T-iddJfQwWZc",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageNumber\": \"1\",\r\n    \"pageSize\": \"2\",\r\n    \"orders\": [\r\n        {\r\n            \"field\": \"user_name\",\r\n            \"direction\": \"ASC\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/users/page",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"page"
							]
						}
					},
					"response": []
				},
				{
					"name": "添加",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJMT0dJTl9JTkZPIjoie1wiYWNjb3VudE5vbkV4cGlyZWRcIjp0cnVlLFwiYWNjb3VudE5vbkxvY2tlZFwiOnRydWUsXCJhdXRob3JpdGllc1wiOltdLFwiY3JlZGVudGlhbHNOb25FeHBpcmVkXCI6dHJ1ZSxcImVuYWJsZWRcIjp0cnVlLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwidXNlclwiOntcImNvaW5cIjowLjAsXCJjcmVhdGVUaW1lXCI6MTc0NzMyMzgxODAwMCxcImRvY19udW1cIjowLFwiZmFuc1wiOjAsXCJpZFwiOlwiMVwiLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwicGhvbmVcIjpcIjEyM1wiLFwidXBkYXRlVGltZVwiOjE3NDczMjM4MTgwMDAsXCJ1c2VyTmFtZVwiOlwiMTIzXCJ9LFwidXNlcm5hbWVcIjpcIjEyM1wifSIsImV4cCI6MTc0NzMzODM0MiwiaWF0IjoxNzQ3MzMxMTQyLCJqdGkiOiI0ZTJjMDhkNTkwNzU0NmM4ODQxZTE0OGU4ZDBiZGE4NSJ9.FDWARis3jlHdr0pLQ0wQH9yuK01a7h-T-iddJfQwWZc",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageNumber\": \"1\",\r\n    \"pageSize\": \"2\",\r\n    \"orders\": [\r\n        {\r\n            \"field\": \"user_name\",\r\n            \"direction\": \"ASC\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "修改",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJMT0dJTl9JTkZPIjoie1wiYWNjb3VudE5vbkV4cGlyZWRcIjp0cnVlLFwiYWNjb3VudE5vbkxvY2tlZFwiOnRydWUsXCJhdXRob3JpdGllc1wiOltdLFwiY3JlZGVudGlhbHNOb25FeHBpcmVkXCI6dHJ1ZSxcImVuYWJsZWRcIjp0cnVlLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwidXNlclwiOntcImNvaW5cIjowLjAsXCJjcmVhdGVUaW1lXCI6MTc0NzMyMzgxODAwMCxcImRvY19udW1cIjowLFwiZmFuc1wiOjAsXCJpZFwiOlwiMVwiLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwicGhvbmVcIjpcIjEyM1wiLFwidXBkYXRlVGltZVwiOjE3NDczMjM4MTgwMDAsXCJ1c2VyTmFtZVwiOlwiMTIzXCJ9LFwidXNlcm5hbWVcIjpcIjEyM1wifSIsImV4cCI6MTc0NzMzODM0MiwiaWF0IjoxNzQ3MzMxMTQyLCJqdGkiOiI0ZTJjMDhkNTkwNzU0NmM4ODQxZTE0OGU4ZDBiZGE4NSJ9.FDWARis3jlHdr0pLQ0wQH9yuK01a7h-T-iddJfQwWZc",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"d6ad8d13e640bfd44c0490d4816a70dc\",\r\n    \"userName\": \"曹贞凯\",\r\n    \"password\": \"czk\",\r\n    \"phone\": \"15077831108\",\r\n    \"doc_num\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "删除",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjMiLCJMT0dJTl9JTkZPIjoie1wiYWNjb3VudE5vbkV4cGlyZWRcIjp0cnVlLFwiYWNjb3VudE5vbkxvY2tlZFwiOnRydWUsXCJhdXRob3JpdGllc1wiOltdLFwiY3JlZGVudGlhbHNOb25FeHBpcmVkXCI6dHJ1ZSxcImVuYWJsZWRcIjp0cnVlLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwidXNlclwiOntcImNvaW5cIjowLjAsXCJjcmVhdGVUaW1lXCI6MTc0NzMyMzgxODAwMCxcImRvY19udW1cIjowLFwiZmFuc1wiOjAsXCJpZFwiOlwiMVwiLFwicGFzc3dvcmRcIjpcIiQyYSQxMCRUdUV6VWZnTUpMTHVoaXcwcFBRdEtPdmtUcFhsVkN6d0N3eGs5Zy40UEduNWx3TlVHeWlDMlwiLFwicGhvbmVcIjpcIjEyM1wiLFwidXBkYXRlVGltZVwiOjE3NDczMjM4MTgwMDAsXCJ1c2VyTmFtZVwiOlwiMTIzXCJ9LFwidXNlcm5hbWVcIjpcIjEyM1wifSIsImV4cCI6MTc0NzMzODM0MiwiaWF0IjoxNzQ3MzMxMTQyLCJqdGkiOiI0ZTJjMDhkNTkwNzU0NmM4ODQxZTE0OGU4ZDBiZGE4NSJ9.FDWARis3jlHdr0pLQ0wQH9yuK01a7h-T-iddJfQwWZc",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/users/10",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"10"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "认证",
			"item": [
				{
					"name": "登录--(可不用)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "username-127-0-0-1-8888=\"2|1:0|10:1746378059|23:username-127-0-0-1-8888|200:eyJ1c2VybmFtZSI6ICIzNDA4YmJmYTQ3YTg0ZGE2OGQ5YzIxMDg0NTk3NGFiMyIsICJuYW1lIjogIkFub255bW91cyBQYXNpdGhlZSIsICJkaXNwbGF5X25hbWUiOiAiQW5vbnltb3VzIFBhc2l0aGVlIiwgImluaXRpYWxzIjogIkFQIiwgImNvbG9yIjogbnVsbH0=|d901d56cb956e3cec51044731941e949e75f2155c7021f3b9009b0cb316f9f0d\"; JSESSIONID=20987F213905011890C9CF1542184927",
								"type": "default"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "phone",
									"value": "123",
									"type": "text"
								},
								{
									"key": "password",
									"value": "czk",
									"type": "text"
								},
								{
									"key": "userId",
									"value": "123",
									"type": "default",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/auth/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							],
							"query": [
								{
									"key": "userId",
									"value": "123",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "刷新Token--(可不用)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refreshToken",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyMzQiLCJMT0dJTl9JTkZPIjoie1wiYWNjb3VudE5vbkV4cGlyZWRcIjp0cnVlLFwiYWNjb3VudE5vbkxvY2tlZFwiOnRydWUsXCJhdXRob3JpdGllc1wiOltdLFwiY3JlZGVudGlhbHNOb25FeHBpcmVkXCI6dHJ1ZSxcImVuYWJsZWRcIjp0cnVlLFwicGFzc3dvcmRcIjpcIiQyYSQxMCR5Q0dQUERCdHBuRTdTZW9VWGsyN251b3E4SnQuYnM1WExwMmhOTkZsWWI2Q2hiTHBwY04xLlwiLFwidXNlclwiOntcImNvaW5cIjowLjAsXCJkb2NfbnVtXCI6MCxcImZhbnNcIjowLFwiaWRcIjpcIjk0MjMyNzA1LWFmNTItNDRmNi1iMTgzLTIwNDk0NTQzNGE1M1wiLFwicGFzc3dvcmRcIjpcIiQyYSQxMCR5Q0dQUERCdHBuRTdTZW9VWGsyN251b3E4SnQuYnM1WExwMmhOTkZsWWI2Q2hiTHBwY04xLlwiLFwicGhvbmVcIjpcIjIzNFwiLFwidXNlck5hbWVcIjpcIjIzNFwifSxcInVzZXJuYW1lXCI6XCIyMzRcIn0iLCJleHAiOjE3NDc0MjExOTcsImlhdCI6MTc0NjgxNjM5NywianRpIjoiNDczNDVlMWU5M2RlNDJmMjlmMTY0NGYwYzM5ZDk0MjMifQ.ktgF_zl8LQRBmb43Q_Mdj0vprAWmoFgT8C1YtOAlTCY",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/api/v1/auth/refresh-token",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"\r",
					"// ===== 配置部分 =====\r",
					"var config = {\r",
					"    baseUrl: pm.environment.get('base-url'),\r",
					"    loginPath: \"/api/v1/auth/login\",\r",
					"    refreshTokenPath: \"/api/v1/auth/refresh-token\",\r",
					"    tokenKey: \"Authorization\",\r",
					"    tokenExpiryKey: \"token_expires_at\",\r",
					"    refreshTokenKey: \"refreshToken\",\r",
					"    refreshTokenExpiryKey: \"refreshToken_token_expires_at\"\r",
					"};\r",
					"\r",
					"// ===== 工具函数 =====\r",
					"// JSON 对象转换为 URL 编码格式\r",
					"function get_url_encoded_data(d) {\r",
					"    var temp = [];\r",
					"    for (let k in d) {\r",
					"        temp.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(d[k]));\r",
					"    }\r",
					"    return temp.join('&');\r",
					"}\r",
					"\r",
					"\r",
					"// ===== 主逻辑 =====\r",
					"// 准备登录数据\r",
					"var data = {\r",
					"    \"phone\": pm.environment.get(\"phone\"),\r",
					"    \"password\": pm.environment.get(\"password\")\r",
					"};\r",
					"\r",
					"var currentToken = pm.environment.get(config.tokenKey);\r",
					"// 检查token是否存在或过期\r",
					"function isTokenExpired() {\r",
					"    var expiresAt = pm.environment.get(config.tokenExpiryKey);\r",
					"    return !currentToken || (expiresAt && (Date.now() / 1000 | 0) > expiresAt);\r",
					"}\r",
					"\r",
					"\r",
					"// 检查refreshToken是否存在或过期\r",
					"function isRefreshTokenExpired() {\r",
					"    var expiresAt = pm.environment.get(config.refreshTokenExpiryKey);\r",
					"    var refreshToken = pm.environment.get(config.refreshTokenKey);\r",
					"    return !refreshToken || (expiresAt && (Date.now() / 1000 | 0) > expiresAt);\r",
					"}\r",
					"\r",
					"// 如果需要刷新token，则发送登录请求\r",
					"if (isTokenExpired()) {\r",
					"    console.log(\"Token不存在或已过期，正在获取新token...\");\r",
					"    var tokenRequest;\r",
					"    if (!isRefreshTokenExpired()) {\r",
					"        var refreshData = {\r",
					"            \"refreshToken\": pm.environment.get(config.refreshTokenKey)\r",
					"        };\r",
					"        console.log(\"使用refreshToken获取新token...\");\r",
					"        tokenRequest = {\r",
					"            url: config.baseUrl + config.refreshTokenPath,\r",
					"            method: \"POST\",\r",
					"            header: {\r",
					"                \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
					"                // 如果已有token，也可以携带（取决于API设计）\r",
					"                // ...(currentToken ? { \"Authorization\": currentToken } : {})\r",
					"            },\r",
					"            body: {\r",
					"                mode: \"urlencoded\",\r",
					"                urlencoded: Object.entries(refreshData).map(([key, value]) => ({\r",
					"                    key: key,\r",
					"                    value: value,\r",
					"                    type: \"text\"\r",
					"                }))\r",
					"            }\r",
					"        };\r",
					"\r",
					"    } else {\r",
					"        tokenRequest = {\r",
					"            url: config.baseUrl + config.loginPath,\r",
					"            method: \"POST\",\r",
					"            header: {\r",
					"                \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
					"                // 如果已有token，也可以携带（取决于API设计）\r",
					"                // ...(currentToken ? { \"Authorization\": currentToken } : {})\r",
					"            },\r",
					"            body: {\r",
					"                mode: \"urlencoded\",\r",
					"                urlencoded: Object.entries(data).map(([key, value]) => ({\r",
					"                    key: key,\r",
					"                    value: value,\r",
					"                    type: \"text\"\r",
					"                }))\r",
					"            }\r",
					"        };\r",
					"    }\r",
					"    pm.sendRequest(tokenRequest, function (err, response) {\r",
					"        if (err) {\r",
					"            console.error(\"请求错误:\", err);\r",
					"            return;\r",
					"        }\r",
					"\r",
					"        if (response.code === 200) {\r",
					"            try {\r",
					"                var jsonResponse = response.json();\r",
					"                var newToken = jsonResponse.data.accessToken;\r",
					"                var refreshToken = jsonResponse.data.refreshToken;\r",
					"                // 保存新token\r",
					"                pm.environment.set(config.tokenKey, newToken);\r",
					"                pm.environment.set(config.refreshTokenKey, refreshToken);\r",
					"                console.log(\"新token已保存:\", newToken);\r",
					"\r",
					"                // 计算并保存过期时间戳（使用 expiresIn 字段）\r",
					"                if (jsonResponse.data.expiresIn) {\r",
					"                    // 将 expiresIn（秒）转换为毫秒，加上当前时间\r",
					"                    // var expiresAt = new Date().getTime() + jsonResponse.data.expiresIn * 1000;\r",
					"                    var expiresAt =parseJwt(newToken).payload.exp;\r",
					"                    // var refreshExpiresAt = new Date().getTime() + jsonResponse.data.expiresIn * 1000 * 84;\r",
					"                    var refreshExpiresAt = parseJwt(refreshToken).payload.exp;\r",
					"                    pm.environment.set(config.tokenExpiryKey, expiresAt);\r",
					"                    pm.environment.set(config.refreshTokenExpiryKey, refreshExpiresAt);\r",
					"                    console.log(\"Token有效期设置为:\", new Date(expiresAt * 1000));\r",
					"                    console.log(\"RefreshToken有效期设置为:\", new Date(refreshExpiresAt * 1000));\r",
					"                }\r",
					"\r",
					"                // 触发原始请求继续执行\r",
					"                setToken(newToken);\r",
					"                pm.execution.setNextRequest(pm.info.requestName);\r",
					"            } catch (parseError) {\r",
					"                console.error(\"解析JSON失败:\", parseError);\r",
					"            }\r",
					"        } else {\r",
					"            console.log(\"获取token失败。状态码:\", response.code);\r",
					"        }\r",
					"    });\r",
					"\r",
					"\r",
					"\r",
					"\r",
					"} else {\r",
					"    setToken(currentToken);\r",
					"}\r",
					"\r",
					"function setToken(token) {\r",
					"    // token有效，确保当前请求携带token\r",
					"    pm.request.headers.upsert({\r",
					"        key: \"Authorization\",\r",
					"        value: token\r",
					"    });\r",
					"    console.log(\"已为请求添加token:\", token);\r",
					"}\r",
					"\r",
					"// ===== JWT解析工具 =====\r",
					"function parseJwt(token) {\r",
					"    if (!token) return null;\r",
					"    \r",
					"    // 分割JWT的三个部分\r",
					"    const parts = token.split('.');\r",
					"    if (parts.length !== 3) {\r",
					"        console.warn('Invalid JWT format');\r",
					"        return null;\r",
					"    }\r",
					"    \r",
					"    // 解码Header和Payload（Base64URL -> Base64 -> JSON）\r",
					"    const decodeBase64Url = (str) => {\r",
					"        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r",
					"        switch (output.length % 4) {\r",
					"            case 0: break;\r",
					"            case 2: output += '=='; break;\r",
					"            case 3: output += '='; break;\r",
					"            default: throw new Error('Illegal base64url string!');\r",
					"        }\r",
					"        return decodeURIComponent(escape(atob(output)));\r",
					"    };\r",
					"    \r",
					"    try {\r",
					"        const header = JSON.parse(decodeBase64Url(parts[0]));\r",
					"        const payload = JSON.parse(decodeBase64Url(parts[1]));\r",
					"        const signature = parts[2]; // 签名是Base64URL编码的，通常不需要解析\r",
					"        \r",
					"        return { header, payload, signature };\r",
					"    } catch (error) {\r",
					"        console.error('Failed to parse JWT:', error);\r",
					"        return null;\r",
					"    }\r",
					"}\r",
					"\r",
					"// console.log(parseJwt(pm.environment.get(config.refreshTokenKey)).payload.exp);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}